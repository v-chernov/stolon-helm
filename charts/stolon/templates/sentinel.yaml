apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-sentinel
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.sentinel_replicas }}
  selector:
    matchLabels:
      component: {{ .Release.Name }}-sentinel
      stolon-cluster: {{ .Release.Name }}-{{ .Release.Namespace }}
  template:
    metadata:
      labels:
        component: {{ .Release.Name }}-sentinel
        stolon-cluster: {{ .Release.Name }}-{{ .Release.Namespace }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      {{ if .Values.global.serviceAccount.name }}serviceAccountName: {{ .Values.global.serviceAccount.name }}{{ else }}serviceAccountName: default{{ end }}
      {{ if .Values.global.imagePullSecrets }}imagePullSecrets:
        {{ range .Values.global.imagePullSecrets }}
          - {{ . | toYaml}}
        {{ end }}{{ end }}
      containers:
        - name: {{ .Release.Name }}-sentinel
          image: {{ if .Values.global.image_repo }}{{ .Values.global.image_repo }}/{{ end }}sorintlab/stolon:master-pg{{ .Values.global.postgres_version }}
          command:
            - stolon-sentinel
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: STSENTINEL_CLUSTER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['stolon-cluster']
            - name: STSENTINEL_STORE_BACKEND
              value: "kubernetes"
            - name: STSENTINEL_KUBE_RESOURCE_KIND
              value: "configmap"
            - name: STSENTINEL_METRICS_LISTEN_ADDRESS
              value: "0.0.0.0:8080"
          ports:
            - containerPort: 8080
