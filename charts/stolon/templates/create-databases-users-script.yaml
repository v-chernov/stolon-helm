{{- if or .Values.databases .Values.additionalUser }}
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-databases
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
data:
  script.sh: |
    #!/bin/bash
    {{- if .Values.databases }}
    {{- range $database := .Values.databases }}
    echo CREATE USER {{ $database.name }} IF NOT EXISTS
    until echo """SELECT 'CREATE USER \"{{ $database.name }}\"' WHERE NOT EXISTS (SELECT FROM pg_catalog.pg_user WHERE usename = '{{ $database.name }}');\gexec""" | {{ include "proxy.connect" . }}; do echo "WAIT USER {{ $database.name }} CREATION" && sleep 1; done
    echo TRY ALTER USER {{ $database.name }} PASSWORD
    until echo """ALTER USER \"{{ $database.name }}\" WITH PASSWORD '$(cat /etc/secrets/stolon/database-{{ $database.name }})'""" | {{ include "proxy.connect" . }}; do echo "WAIT USER {{ $database.name }} PASSWORD ALTER" && sleep 1; done
    echo TRY CREATE DATABASE {{ $database.name }}
    until echo """SELECT 'CREATE DATABASE \"{{ $database.name }}\"' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = '{{ $database.name }}');\gexec""" | {{ include "proxy.connect" . }}; do echo "WAIT DATABASE {{ $database.name }} CREATION" && sleep 1; done
    echo TRY ALTER DATABASE {{ $database.name }} OWNER TO USER {{ $database.name }}
    until {{ include "proxy.connect" . }} -c 'ALTER DATABASE "{{ $database.name }}" OWNER TO "{{ $database.name }}";'; do echo "WAIT DATABASE {{ $database.name }} OWNER ASSIGNMENT" && sleep 1; done
    {{- end }}
    {{- end }}
    {{- if .Values.additionalUser }}
    {{- range $user := .Values.additionalUser  }}
    echo TRY CREATE USER {{ $user.name }} IF NOT EXISTS
    until echo """SELECT 'CREATE USER \"{{ $user.name }}\"' WHERE NOT EXISTS (SELECT FROM pg_catalog.pg_user WHERE usename = '{{ $user.name }}');\gexec""" | {{ include "proxy.connect" . }}; do echo "WAIT USER {{ $user.name }} CREATION" && sleep 1; done
    echo TRY ALTER ROLE {{ $user.name }} PERMISSIONS TO {{ $user.permissions }}
    until echo """ALTER USER \"{{ $user.name }}\" WITH {{ if $user.permissions }}{{ $user.permissions }}{{ end }} PASSWORD '$(cat /etc/secrets/stolon/user-{{ $user.name }})'""" | {{ include "proxy.connect" . }}; do echo "WAIT USER {{ $user.name }} ALTER PERMISSIONS" && sleep 1; done
    {{- end }}
    {{- end }}
{{- end }}
