{{ if .Values.databases }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-db-create
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  schedule: "{{ .Values.databases_creation_schedule }}"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            name: {{ .Release.Name }}-db-create
            stolon-cluster: {{ .Release.Name }}
        spec:
          restartPolicy: Never
          initContainers:
            - name: cluster
              imagePullPolicy: IfNotPresent
              image: {{ include "sidecar.image" . }}
              command:
                - sh
                - '-c'
                - |
                  echo trying to contact ${PGHOST} 5432
                  until nc -vzw 1 ${PGHOST} 5432; do
                    echo "waiting for stolon cluster..."
                    sleep 2
                  done
              env:
                {{- include "psql.ctl" . | indent 16 }}

            - name: pg-check
              image: {{ include "stolon.image" . }}
              command:
                - "/bin/bash"
                - "-ec"
                - |
                  until {{ include "check.proxy" . }} ; do
                    echo "waiting for stolon cluster..."
                    sleep 2
                  done
              env:
                {{- include "psql.ctl" . | indent 16 }}
                - name: STKEEPER_PG_SU_PASSWORDFILE
                  value: "/etc/secrets/stolon/password"
              volumeMounts:
                {{- include "stolon.mounts" . | indent 16 }}

          containers:
            - name: stolon-db-create
              image: {{ include "stolon.image" . }}
              command:
                - "/etc/databases/script.sh"
              env:
                {{- include "psql.ctl" . | indent 16 }}
                - name: STKEEPER_PG_SU_PASSWORDFILE
                  value: "/etc/secrets/stolon/password"
              volumeMounts:
                {{- include "stolon.mounts" . | indent 16 }}
                - mountPath: /etc/databases
                  name: databases
          volumes:
            {{- include "stolon.configVolumes" . | indent 12 }}
            - name: databases
              configMap:
                name: {{ .Release.Name }}-databases
                defaultMode: 0755
{{ end }}
