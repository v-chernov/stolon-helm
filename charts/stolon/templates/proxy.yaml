apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-proxy
  namespace: {{ .Release.Namespace }}

spec:
  replicas: {{ .Values.proxy_replicas }}
  selector:
    matchLabels:
      component: stolon-proxy
      stolon-cluster: {{ .Release.Name }}-{{ .Release.Namespace }}
  template:
    metadata:
      labels:
        component: stolon-proxy
        stolon-cluster: {{ .Release.Name }}-{{ .Release.Namespace }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      {{ if .Values.global.serviceAccount.name }}serviceAccountName: {{ .Values.global.serviceAccount.name }}{{ else }}serviceAccountName: default{{ end }}
      {{ if .Values.global.imagePullSecrets }}imagePullSecrets:
        {{ range .Values.global.imagePullSecrets }}
          - {{ . | toYaml}}
        {{ end }}{{ end }}
      initContainers:
        - name: cluster
          imagePullPolicy: IfNotPresent
          image: {{ if .Values.global.image_repo }}{{ .Values.global.image_repo }}/{{ end }}busybox:{{ .Values.global.busybox_tag }}
          command:
            - sh
            - '-c'
            - |
              echo trying to contact {{ .Release.Name }}-sentinel-monitoring 8080
              until nc -vzw 1 {{ .Release.Name }}-sentinel-monitoring 8080; do
                echo "waiting for stolon cluster..."
                sleep 2
              done
      containers:
        - name: proxy
          image: {{ if .Values.global.image_repo }}{{ .Values.global.image_repo }}/{{ end }}sorintlab/stolon:master-pg{{ .Values.global.postgres_version }}
          command:
            - "/bin/bash"
            - "-ec"
            - stolon-proxy
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: STPROXY_CLUSTER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['stolon-cluster']
            - name: STPROXY_STORE_BACKEND
              value: "kubernetes"
            - name: STPROXY_KUBE_RESOURCE_KIND
              value: "configmap"
            - name: STPROXY_LISTEN_ADDRESS
              value: "0.0.0.0"
            - name: STPROXY_METRICS_LISTEN_ADDRESS
              value: "0.0.0.0:8080"

            - name: STOLONCTL_CLUSTER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['stolon-cluster']
            - name: STOLONCTL_STORE_BACKEND
              value: "kubernetes"
            - name: STOLONCTL_KUBE_RESOURCE_KIND
              value: "configmap"

          ports:
            - containerPort: 5432
            - containerPort: 8080
          readinessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 10
            timeoutSeconds: 5
