{{ if .Values.databases }}
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Release.Namespace }}

  name: {{ .Release.Name }}-databases
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
data:
  script.sh: |
    #!/bin/bash
    export ROOT_PASSWORD=$(cat /etc/secrets/stolon/password)
    {{ if .Values.databases }}{{ range $database := .Values.databases }}{{ printf "psql postgresql://stolon:%s@{{ .Release.Name }}-proxy-service:5432/postgres -c 'CREATE USER \"%s\";'" "${ROOT_PASSWORD}" $database.name }}
    {{ if $database.password }}{{ printf "echo \"\"\"ALTER USER \\\"%s\\\" WITH PASSWORD '%s';\"\"\"  | psql postgresql://stolon:%s@{{ .Release.Name }}-proxy-service:5432/postgres" $database.name $database.password "${ROOT_PASSWORD}" }}{{ else }}{{ printf "echo \"\"\"ALTER USER \\\"%s\\\" WITH PASSWORD '%s';\"\"\"  | psql postgresql://stolon:%s@{{ .Release.Name }}-proxy-service:5432/postgres" $database.name (randAlphaNum 30) "${ROOT_PASSWORD}" }}{{ end }}
    {{ printf "psql postgresql://stolon:%s@{{ .Release.Name }}-proxy-service:5432/postgres -c 'CREATE DATABASE \"%s\";'" "${ROOT_PASSWORD}" $database.name }}
    {{ printf "psql postgresql://stolon:%s@{{ .Release.Name }}-proxy-service:5432/postgres -c 'ALTER DATABASE \"%s\" OWNER TO \"%s\";'" "${ROOT_PASSWORD}" $database.name $database.name }}
    {{ end }}{{ end }}
{{ end }}
