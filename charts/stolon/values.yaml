postgres_replicas: 3
proxy_replicas: 2
sentinel_replicas: 2

openshift:
  enabled: false

persistence:
  # storageClass: "-"
  size: 512Mi

image:
  registry: docker.io
  repository: sorintlab/stolon
  tag: master # SorintLab Stolon release
  postgres: 12 # major PostgreSQL version
  pullPolicy: IfNotPresent
  #pullSecrets:

sidecar:
  registry: docker.io
  repository: busybox
  tag: "1.32.0"

serviceAccount:
  create: false
  #name: default

rbac:
  create: false

cluster_name: "cluster.local"

# if not empty, generate Stolon JSON config
# full reference in https://github.com/sorintlab/stolon/blob/master/doc/cluster_spec.md
# config apply after keeper restart
stolon:
  automaticPgRestart: false
  # most PostgreSQL parameters maps as pgParameters
  # use official docs for understanding them: https://www.postgresql.org/docs/12/config-setting.html
  pgParameters:
    #wal_level: logical

# Pod resource requests and limits for PostgreSQL (keeper). Be careful with this parameters
resources: {}
  # requests:
  #   cpu: "500m"
  #   memory: "1024Mi"
  # limits:
  #   cpu: "500m"
  #   memory: "1024Mi"

# Pod resource requests and limits for initContainers, Jobs and Sentinel
initResources:
  requests:
    cpu: "10m"
    memory: "20Mi"
  limits:
    cpu: "20m"
    memory: "50Mi"

# Pod resource requests and limits for Proxy
proxyResources:
  requests:
    cpu: "10m"
    memory: "50Mi"
  limits:
    cpu: "20m"
    memory: "100Mi"

#databases: # databases created after installation
#  keycloak:
#     name: keycloak
#     password: "" # if empty or undefined, will be generated random password (30 symbols)

additionalUser:
  #replica:
  #  name: test-replicauser
  #  permissions: REPLICATION
  # if password empty or undefined, will be generated random password (30 symbols)
  #superuser:
  #  name: test-superuser
  #  permissions: SUPERUSER
  #  password: super-user-super-secret

#secrets_refresh_schedule: "*/2 * * * *" # if defined, creates CronJob

postgres_password: ""  # system superuser password. if empty, will be generated random password (30 symbols)
replication_password: "" # system replication user password. if empty, will be generated random password (30 symbols)

logDataFormat: "-I'seconds'"
